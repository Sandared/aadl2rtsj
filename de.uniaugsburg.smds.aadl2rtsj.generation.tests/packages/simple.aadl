package simple
public
	
	system a_system
	end a_system;
	
	system implementation a_system.impl
		subcomponents
			aProcess: process a_process.impl;
	end a_system.impl;
	
	process a_process
		features
			datain: in data port;
			dataout: out data port;
	end a_process;

	process implementation a_process.impl
		subcomponents
			sendReceive: thread sendreceive.impl ;
			worker: thread worker.impl;
		connections
			subcomp_con1: port worker.wDataOut -> sendReceive.sRDatain;
			subcomp_con2: port sendReceive.sRDataOut -> worker.wDataIn;
			downward: port datain -> sendReceive.extDataIn;
			upward: port sendReceive.extDataOut -> dataout;
	end a_process.impl;

	thread worker
		features
			wDataIn: in data port;
			wDataOut: out data port;
	end worker;

	thread implementation worker.impl
	end worker.impl;

	thread sendreceive
		features
			extDataIn: in data port;
			extDataOut: out data port;
			sRDataIn: in data port;
			sRDataOut: out data port;
	end sendreceive;

	thread implementation sendreceive.impl
	end sendreceive.impl;
end simple;